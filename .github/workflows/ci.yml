name: CI

on:
  workflow_dispatch:

jobs:

  build:
    name: ${{ matrix.job.target }} (${{ matrix.job.os }})
    runs-on: ${{ matrix.job.os }}
    strategy:
      fail-fast: false
      matrix:
        job:
          # - { target: aarch64-unknown-linux-gnu   , os: ubuntu-20.04, use-cross: true }
          # - { target: arm-unknown-linux-gnueabihf , os: ubuntu-20.04, use-cross: true }
          # - { target: arm-unknown-linux-musleabihf, os: ubuntu-20.04, use-cross: true }
          # - { target: i686-pc-windows-msvc        , os: windows-2022                  }
          # - { target: i686-unknown-linux-gnu      , os: ubuntu-20.04, use-cross: true }
          # - { target: i686-unknown-linux-musl     , os: ubuntu-20.04, use-cross: true }
          - { target: x86_64-apple-darwin         , os: macos-10.15 }
          - { target: x86_64-pc-windows-gnu       , os: windows-2022 }
          # - { target: x86_64-pc-windows-msvc      , os: windows-2022                  }
          - { target: x86_64-unknown-linux-gnu    , os: ubuntu-22.04 }
          # - { target: x86_64-unknown-linux-musl   , os: ubuntu-20.04, use-cross: true }
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Install prerequisites
        shell: bash
        run: |
          case ${{ matrix.job.target }} in
            x86_64-unknown-linux-gnu)
              sudo apt-get -y update
              sudo apt-get install -y \
                 clang \
                 cmake \
                 curl \
                 gcc \
                 git \
                 g++ \
                 libpam0g-dev \
                 libasound2-dev \
                 libunwind-dev \
                 libgstreamer1.0-dev \
                 libgstreamer-plugins-base1.0-dev \
                 libgtk-3-dev \
                 libpulse-dev \
                 libva-dev \
                 libvdpau-dev \
                 libxcb-randr0-dev \
                 libxcb-shape0-dev \
                 libxcb-xfixes0-dev \
                 libxdo-dev \
                 libxfixes-dev \
                 nasm \
                 wget
              ;;
            # arm-unknown-linux-*) sudo apt-get -y update ; sudo apt-get -y install gcc-arm-linux-gnueabihf ;;
            # aarch64-unknown-linux-gnu) sudo apt-get -y update ; sudo apt-get -y install gcc-aarch64-linux-gnu ;;
          esac

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@v1
        with:
          toolchain: stable
          targets: ${{ matrix.job.target }}
          components: ''

      - name: Show version information (Rust, cargo, GCC)
        shell: bash
        run: |
          gcc --version || true
          rustup -V
          rustup toolchain list
          rustup default
          cargo -V
          rustc -V

      - uses: Swatinem/rust-cache@v2

      - name: Build
        uses: actions-rs/cargo@v1
        with:
          use-cross: ${{ matrix.job.use-cross }}
          command: build
          args: --locked --target=${{ matrix.job.target }}

      - name: clean
        shell: bash
        run: |
          cargo clean