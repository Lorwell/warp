name: Build and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: x86_64-unknown-linux-gnu

      - name: Install base tools
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            gcc-mingw-w64 \
            clang \
            llvm \
            libssl-dev \
            pkg-config \
            curl \
            git

      - name: Install Rust and targets
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          source $HOME/.cargo/env
          rustup target add x86_64-pc-windows-gnu
          rustup target add x86_64-unknown-linux-gnu
          rustup target add x86_64-apple-darwin

      - name: Install osxcross for macOS cross-compilation
        run: |
          git clone https://github.com/tpoechtrager/osxcross.git
          cd osxcross
          # 下载 macOS SDK（需要替换为你实际的 SDK URL）
          curl -L https://example.com/MacOSX10.15.sdk.tar.xz -o tarballs/MacOSX10.15.sdk.tar.xz
          UNATTENDED=1 ./build.sh
          export PATH=$PWD/target/bin:$PATH

      - name: Configure environment variables
        run: |
          echo "CC_x86_64_pc_windows_gnu=x86_64-w64-mingw32-gcc" >> $GITHUB_ENV
          echo "CC_x86_64_unknown_linux_gnu=gcc" >> $GITHUB_ENV
          echo "CC_x86_64_apple_darwin=o64-clang" >> $GITHUB_ENV
          echo "CARGO_TARGET_X86_64_APPLE_DARWIN_LINKER=o64-clang" >> $GITHUB_ENV
          echo "PATH=$PATH:/path/to/osxcross/target/bin" >> $GITHUB_ENV

      - name: Build
        run: |
          make build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: warp-packer-builds
          path: |
            target/x86_64-unknown-linux-gnu/release/warp-packer
            target/x86_64-pc-windows-gnu/release/warp-packer.exe
            target/x86_64-apple-darwin/release/warp-packer