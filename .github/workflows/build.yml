name: Build and Release

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        target: [x86_64-unknown-linux-gnu, x86_64-apple-darwin, x86_64-pc-windows-gnu]
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
          targets: ${{ matrix.target }}

      - name: Install strip tools (Linux and macOS)
        if: matrix.os != 'windows-latest'
        run: |
          sudo apt-get update && sudo apt-get install -y binutils
          brew install binutils || true

      - name: Install strip tools (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install mingw

      - name: Build for ${{ matrix.target }}
        run: |
          cargo build -p warp-runner --release --target ${{ matrix.target }}
          cargo build -p warp-packer --release --target ${{ matrix.target }}

      - name: Strip binaries (Linux and macOS)
        if: matrix.os != 'windows-latest'
        run: |
          strip target/${{ matrix.target }}/release/warp-runner || true
          strip target/${{ matrix.target }}/release/warp-packer || true

      - name: Strip binaries (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          strip target/${{ matrix.target }}/release/warp-runner.exe || true
          strip target/${{ matrix.target }}/release/warp-packer.exe || true

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ matrix.target }}
          path: target/${{ matrix.target }}/release/